function HunterEnemy(t,e,o,i,n){Enemy.call(this,t,e,o,i,n)}function LinearEnemy(t,e,o,i,n){Enemy.call(this,t,e,o,i,n),this.speed=Math.random()<.5?1:-1}function Player(t,e,o,i){Entity.call(this,t,e,o,i)}function RandomEnemy(t,e,o,i,n){Enemy.call(this,t,e,o,i,n)}HunterEnemy.prototype.__proto__=Enemy.prototype,HunterEnemy.prototype.draw=function(t){this.__proto__.__proto__.draw.call(this,t),t.addClass("hunter")},HunterEnemy.prototype.step=function(t,e){let o=[];const i=t.width,n=t.height;let s=copyGameZone(t);for(s[this.i][this.j]=!1,o.push([{i:this.i,j:this.j}]);o.length>0;){let h=o.shift(),p=h[h.length-1],a=[[p.i+1,p.j+0],[p.i+0,p.j+1],[p.i-1,p.j+0],[p.i+0,p.j-1]];for(let p=0;p<a.length;p+=1){if(a[p][0]===e.i&&a[p][1]===e.j){let t=-1;if(h.length>1){const e=h[1];t=getDirectionCode(e.i-this.i,e.j-this.j),t===Action.UNKNOWN&&(e.i===n-1&&0===this.i&&(t=Action.UP),0===e.j&&this.j===i-1&&(t=Action.RIGHT),0===e.i&&this.i===n-1&&(t=Action.DOWN),e.j===i-1&&0===this.j&&(t=Action.LEFT))}return this.changeDirection(t),t}a[p][0]=mapTeleport(a[p][0],t.height),a[p][1]=mapTeleport(a[p][1],t.width),!1!==s[a[p][0]][a[p][1]]&&(s[a[p][0]][a[p][1]]=!1,o.push(h.concat({i:a[p][0],j:a[p][1]})))}}},LinearEnemy.prototype.__proto__=Enemy.prototype,LinearEnemy.prototype.draw=function(t){this.__proto__.__proto__.draw.call(this,t),t.addClass("linear")},LinearEnemy.prototype.step=function(t,e){let o=EnemyMoveType.UNKNOWN;const i=this.i,n=this.j;if(this.moveType==EnemyMoveType.HORIZONTAL){const e=mapTeleport(n+this.speed,t.width);t.gameZone[i][e].isEmpty?o=this.speed>0?Action.RIGHT:Action.LEFT:this.speed*=-1}else{const e=mapTeleport(i+this.speed,t.height);t.gameZone[e][n].isEmpty?o=this.speed>0?Action.DOWN:Action.UP:this.speed*=-1}return this.direction=this.speed,o},Player.prototype.__proto__=Entity.prototype,Player.prototype.drinkPotion=function(t){this.health<this.maxHealth&&(this.health+=t.buff)},Player.prototype.takeSword=function(t){this.power+=t.buff},Player.prototype.drawHealthBar=function(t){const e=Math.ceil(this.health/this.maxHealth*100),o=$("<div></div>");o.attr("class","player health"),o.css("width",e+"%");const i=$(`<p>${this.health} HP</p>`);i.attr("class","healthPoint"),t.append(i),t.append(o)},Player.prototype.draw=function(t){this.__proto__.__proto__.draw.call(this,t),t.addClass("player"),this.drawHealthBar(t)},RandomEnemy.prototype.__proto__=Enemy.prototype,RandomEnemy.prototype.draw=function(t){this.__proto__.__proto__.draw.call(this,t),t.addClass("random")},RandomEnemy.prototype.step=function(t,e){const o=this.i,i=this.j;let n=[];o-1>=0&&t.gameZone[o-1][i].isEmpty&&n.push(Action.UP),i+1<t.width&&t.gameZone[o][i+1].isEmpty&&n.push(Action.RIGHT),o+1<t.height&&t.gameZone[o+1][i].isEmpty&&n.push(Action.DOWN),i-1>=0&&t.gameZone[o][i-1].isEmpty&&n.push(Action.LEFT);const s=n.length,h=n[getRandomIntInRange(0,s-1)];return this.changeDirection(h),h};