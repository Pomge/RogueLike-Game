function Enum(e){const n={};for(const t in e)e.hasOwnProperty(t)&&(n[t]=Symbol(e[t]));return Object.freeze(n)}function getDirectionCode(e,n){return-1===e&&0===n?Action.UP:0===e&&1===n?Action.RIGHT:1===e&&0===n?Action.DOWN:0===e&&-1===n?Action.LEFT:Action.UNKNOWN}function getIndexJndex(e){switch(e){case Action.UP:return{indexDiff:-1,jndexDiff:0};case Action.RIGHT:return{indexDiff:0,jndexDiff:1};case Action.DOWN:return{indexDiff:1,jndexDiff:0};case Action.LEFT:return{indexDiff:0,jndexDiff:-1};default:return{indexDiff:0,jndexDiff:0}}}function Enum(e){const n={};for(const t in e)e.hasOwnProperty(t)&&(n[t]=Symbol(e[t]));return Object.freeze(n)}function getEnemyMoveType(e){switch(e){case 0:return EnemyMoveType.HORIZONTAL;case 1:return EnemyMoveType.VERTICAL;case 2:return EnemyMoveType.RANDOM;case 3:return EnemyMoveType.HUNTER;default:return EnemyMoveType.UNKNOWN}}const Action=Enum({UNKNOWN:-1,UP:0,RIGHT:1,DOWN:2,LEFT:3,ATTACK:4}),EnemyMoveType=Enum({UNKNOWN:-1,HORIZONTAL:0,VERTICAL:1,RANDOM:2,HUNTER:3});